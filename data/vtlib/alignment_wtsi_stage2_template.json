{
"version":"1.0",
"description":"Process DNA (or RNA) seq data in BAM files within second stage of NPG Pipeline producing WTSI DNAP Sequencing Informatics output",
"subst_params":[
	{
		"name":"basic_pipeline_params_file",
		"required":"yes",
		"subst_constructor":{
			"vals":[ {"subst":"cfgdatadir"}, "/", "alignment_common.json" ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{
		"id": "basic_pipeline_params",
		"type":"SPFILE",
		"name":{"subst":"basic_pipeline_params_file"},
		"required": "no",
		"comment":"this will expand to a set of subst_param elements"
	},
	{
		"name":"src_bam",
		"required":"yes",
		"subst_constructor":{
			"vals":[ {"subst":"indatadir"}, "/", {"subst":"rpt"}, ".bam" ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{"name":"pre_alignment_name","required":"no","default":"pre_alignment"},
	{
		"name":"pre_alignment_target",
		"required":"yes",
		"subst_constructor":{
			"vals":[ {"subst":"cfgdatadir"}, "/", {"subst":"pre_alignment_name"}, ".json" ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{
		"name":"alignment_vtf",
		"required":"yes",
		"subst_constructor":{
			"vals":[ {"subst":"cfgdatadir"}, "/", {"subst":"alignment_method"}, "_alignment.json" ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{
		"name":"reference_dict",
		"required":"yes",
		"subst_constructor":{
			"vals":[ {"subst":"reposdir"}, "/", {"subst":"reference_dict_name"} ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{"name":"post_alignment","required":"no","default":"post_alignment"},
	{
		"name":"post_alignment_target",
		"required":"yes",
		"subst_constructor":{
			"vals":[ {"subst":"cfgdatadir"}, "/", {"subst":"post_alignment"}, ".json"
			],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{
		"name":"initial_phix_aln_bam_name",
		"required":"no",
		"default":"initial_phix_aln.bam",
		"subst_constructor":{
			"vals":[ "initial_phix_aln_", {"subst":"rpt"}, ".bam" ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{
		"name":"initial_phix_aln_bam",
		"required":"yes",
		"subst_constructor":{
			"vals":[ {"subst":"tmpdir"}, "/", {"subst":"initial_phix_aln_bam_name"} ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{"name":"auxmerge_prep_name","required":"no","default":"auxmerge_prep"},
	{
		"name":"auxmerge_prep",
		"required":"yes",
		"subst_constructor":{
			"vals":[ {"subst":"cfgdatadir"}, "/", {"subst":"auxmerge_prep_name"}, ".json" ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{"name":"alignment_filter_jar_path","required":"no","default":"/software/npg/java_jars"},
	{"name":"java_cmd","required":"no","default":"java"},
	{
		"name":"alignment_filter_jar","required":"no",
		"subst_constructor":{
			"vals":[ {"subst":"alignment_filter_jar_path"}, "/", "AlignmentFilter.jar" ],
			"postproc":{"op":"concat","pad":""}
		}
	},
	{
		"name":"alignment_filter_cmd",
		"required":"yes",
		"subst_constructor":{
			"vals":[
				{"subst":"java_cmd"},
				"-Xmx1000m",
				"-jar", {"subst":"alignment_filter_jar"},
				"IN=__PHIX_INBAM__",
				"IN=__TARGET_INBAM__",
				"OUT=__PHIX_OUTBAM__",
				"OUT=/dev/stdout",
				"METRICS_FILE=__AF_METRICS__",
				"VALIDATION_STRINGENCY=SILENT",
				"CREATE_MD5_FILE=false",
				"VERBOSITY=INFO",
				"QUIET=false",
				"COMPRESSION_LEVEL=5",
				"MAX_RECORDS_IN_RAM=500000",
				"CREATE_INDEX=false"
			],
			"postproc":{"op":"noconcat", "pad":" "}
		}
	},
	{"name":"af_metrics_name","required":"no","default":"alignment_filter_metrics.json"},
	{
		"name":"af_metrics",
		"required":"yes",
		"subst_constructor":{
			"vals":[ {"subst":"logdir"}, "/", {"subst":"rpt"}, ".", {"subst":"af_metrics_name"} ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{"name":"target_indicator","default":""},
	{"name":"phix_indicator","default":"_phix"},
	{
		"name":"fopid_tgt",
		"comment":"id passed to the final_output_prep template; used there to construct unique file names",
		"subst_constructor":{
			"vals":[ {"subst":"rpt"}, {"subst":"target_indicator"} ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{
		"name":"fopid_phix",
		"comment":"id passed to the final_output_prep template; used there to construct unique file names",
		"subst_constructor":{
			"vals":[ {"subst":"rpt"}, {"subst":"phix_indicator"} ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{"name":"final_output_prep_target_name","required":"no","default":"final_output_prep"},
	{
		"name":"final_output_prep_target",
		"required":"yes",
		"subst_constructor":{
			"vals":[ {"subst":"cfgdatadir"}, "/", {"subst":"final_output_prep_target_name"}, ".json" ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{"name":"final_output_prep_phix_name","required":"no","default":"final_output_prep"},
	{
                "name":"final_output_prep_phix",
		"required":"yes",
		"subst_constructor":{
			"vals":[ {"subst":"cfgdatadir"}, "/", {"subst":"final_output_prep_phix_name"}, ".json" ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{"name":"seqchksum_vtf","required":"no","default":"seqchksum"},
	{
                "name":"seqchksum",
		"required":"yes",
		"subst_constructor":{
			"vals":[ {"subst":"cfgdatadir"}, "/", {"subst":"seqchksum_vtf"}, ".json" ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{
		"name":"phix_chksum",
		"required":"yes",
		"subst_constructor":{
			"vals":[ {"subst":"outdatadir"}, "/", {"subst":"rpt"}, "_phix.seqchksum" ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{
		"name":"target_chksum",
		"required":"yes",
		"subst_constructor":{
			"vals":[ {"subst":"outdatadir"}, "/", {"subst":"rpt"}, ".seqchksum" ],
			"postproc":{"op":"concat", "pad":""}
		}
	}
],
"nodes":[
	{
		"id":"src_bam",
		"type":"INFILE",
		"name":{"subst":"src_bam"},
		"description":"BAM using as input to this pipeline - expected to already contain PhiX (normally from hyb buffer spike-in) alignments"
	},
	{
		"id":"bamcollate2",
		"type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": true,
		"cmd":["bamcollate2", "collate=1", "level=0"],
		"comment":"ensure BAM records are gathered by template i.e. queryname"
	},
	{
		"id":"tee0",
		"type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": false,
		"comment":"large wait (500 minutes) to avoid unnecessary spill to disk",
		"cmd":["teepot", "-w", "30000", "-m", "1G", "__PHIX_ALN_OUT__", "__TGT_ALN_OUT__" ]
	},
	{
		"id":"pre_alignment_target",
		"type":"VTFILE",
		"node_prefix":"prealntgt_",
		"name":{"subst":"pre_alignment_target"},
		"description":"subgraph containing pre alignment process"
	},
	{
		"id":"alignment_reference_genome",
		"type":"INFILE",
		"name":{"subst":"alignment_reference_genome"},
		"description":"Prefix for reference fasta and Bowtie2 index files"
	},
	{
		"id":"alignment_target",
		"type":"VTFILE",
		"node_prefix":"alntgt_",
		"name":{"subst":"alignment_vtf"},
		"description":"subgraph containing alignment process"
	},
	{
		"id":"reference_dict",
		"type":"INFILE",
		"name":{"subst":"reference_dict"},
		"description":"Extra metadata e.g. UR, M5 auxtags for BAM SQ header records"
	},
	{
		"id":"post_alignment_target",
		"type":"VTFILE",
		"node_prefix":"postalntgt_",
		"name":{"subst":"post_alignment_target"},
		"description":"subgraph containing post alignment process (target)"
	},
	{
		"id":"bamrecompress_input",
		"type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": true,
		"cmd":"bamrecompress verbose=0 numthreads=2"
	},
	{
		"id":"initial_phix_aln_bam",
		"type":"RAFILE",
		"name":{"subst":"initial_phix_aln_bam"}
	},
	{
		"id":"auxmerge_prep",
		"type":"VTFILE",
		"node_prefix":"amp_",
		"name":{"subst":"auxmerge_prep"},
		"description":"subgraph containing pre alignment process"
	},
	{
		"id":"alignment_filter",
		"type":"EXEC",
		"use_STDIN": false,
		"use_STDOUT": true,
		"cmd":{"subst":"alignment_filter_cmd"}
	},
	{
		"id":"af_metrics",
		"type":"OUTFILE",
		"name":{"subst":"af_metrics"}
	},
	{
		"id":"reference_genome_fasta",
		"type":"INFILE",
		"name":{"subst":"reference_genome_fasta"},
		"description":"Prefix for reference fasta and Bowtie2 index files"
	},
        {
                "id":"final_output_prep_target",
                "type":"VTFILE",
		"node_prefix":"foptgt_",
                "subst_map":{"phix_or_target":{"subst":"target_indicator"},"fopid":{"subst":"fopid_tgt"},"bstmp":"bspaft","brtmp":"brpaft","bmdtmp":"bmdpaft"},
                "name":{"subst":"final_output_prep_target"},
                "description":"subgraph containing post alignment_filter process (target)"
        },
	{
		"id":"phix_reference_genome_fasta",
		"type":"INFILE",
		"name":{"subst":"phix_reference_genome_fasta"},
		"description":"Prefix for reference fasta and Bowtie2 index files"
	},
        {
                "id":"final_output_prep_phix",
                "type":"VTFILE",
		"node_prefix":"fopphx_",
                "subst_map":{"phix_or_target":{"subst":"phix_indicator"},"fopid":{"subst":"fopid_phix"},"bstmp":"bspaft","brtmp":"brpaft","bmdtmp":"bmdpaft"},
                "name":{"subst":"final_output_prep_phix"},
                "description":"subgraph containing post alignment_filter process (phix)"
        },
        { "id":"seqchksum", "type":"VTFILE", "node_prefix":"scs_", "name":{"subst":"seqchksum"}, "description":"subgraph containing seqchksum validation of outputs" },
	{ "id":"phix_chksum", "type":"OUTFILE", "name":{"subst":"phix_chksum"} },
	{ "id":"target_chksum", "type":"OUTFILE", "name":{"subst":"target_chksum"} }
],
"edges":[
	{ "id":"src_to_bc2", "from":"src_bam", "to":"bamcollate2" },
	{ "id":"bc2_to_ti", "from":"bamcollate2", "to":"tee0" },
	{ "id":"t0_to_bamcollate2_ranking_phix", "from":"tee0:__PHIX_ALN_OUT__", "to":"bamrecompress_input" },
	{ "id":"brci_to_ipab", "from":"bamrecompress_input", "to":"initial_phix_aln_bam" },
	{ "id":"ipab_to_bamreset_pre_aln_flt", "from":"initial_phix_aln_bam", "to":"auxmerge_prep" },
	{ "id":"bamreset_pre_aln_flt_to_", "from":"auxmerge_prep", "to":"post_alignment_target:no_align_bam" },
	{ "id":"t0_to_bamcollate2_ranking", "from":"tee0:__TGT_ALN_OUT__", "to":"pre_alignment_target" },
	{ "id":"bamadapterclip_to_alignment", "from":"pre_alignment_target", "to":"alignment_target" },
	{ "id":"ref_to_alignment", "from":"alignment_reference_genome", "to":"alignment_target:reference" },
	{ "id":"alignment_target_to_post_alignment_target", "from":"alignment_target", "to":"post_alignment_target" },
        { "id":"reference_dict_to_post_alignment", "from":"reference_dict", "to":"post_alignment_target:reference_dict" },
	{ "id":"post_alignment_to_alignment_filter", "from":"post_alignment_target", "to":"alignment_filter:__TARGET_INBAM__" },
	{ "id":"iab_to_alignment_filter", "from":"initial_phix_aln_bam", "to":"alignment_filter:__PHIX_INBAM__" },
	{ "id":"alignment_filter_to_metrics", "from":"alignment_filter:__AF_METRICS__", "to":"af_metrics" },
	{ "id":"af_to_paf_target", "from":"alignment_filter", "to":"final_output_prep_target" },
	{ "id":"af_to_paf_phix", "from":"alignment_filter:__PHIX_OUTBAM__", "to":"final_output_prep_phix" },
	{ "id":"ref_to_paf_target", "from":"reference_genome_fasta", "to":"final_output_prep_target:reference_genome_fasta" },
	{ "id":"ref_to_paf_phix", "from":"phix_reference_genome_fasta", "to":"final_output_prep_phix:reference_genome_fasta" },
        { "id":"src_bam_to_seqchksum", "from":"src_bam", "to":"seqchksum" },
	{ "id":"paf_to_bam", "from":"final_output_prep_target", "to":"seqchksum:target_bam" },
	{ "id":"paf_to_bam_phix", "from":"final_output_prep_phix", "to":"seqchksum:phix_bam" },
	{ "id":"target_chksum_to_file", "from":"seqchksum:target_chksum", "to":"target_chksum" },
	{ "id":"phix_chksum_to_file", "from":"seqchksum:phix_chksum", "to":"phix_chksum" }
]
}
