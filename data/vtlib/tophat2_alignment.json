{
"description":"run tophat2 to to align input bam to supplied reference genome",
"version":"1.0",
"subgraph_io":{
	"ports":{
		"inputs":{
			"_stdin_":"bamtofastq",
			"reference":"tophat2:__REFERENCE_GENOME_IN__"
		},
		"outputs":{
			"_stdout_":"bamcat"
		}
	}
},
"subst_params":[
	{
		"id": "basic_pipeline_params",
		"type":"SPFILE",
		"name":{"subst":"basic_pipeline_params_file"},
		"required": "no",
		"comment":"this will expand to a set of subst_param elements"
	},
	{
		"id":"fastq1_name",
		"required":"no",
		"default":"intfile_1.fq.gz",
		"subst_constructor":{
			"vals":[ "intfile_1_", {"subst":"rpt"}, ".fq.gz" ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{
		"id":"fastq1",
		"required":"yes",
		"subst_constructor":{
			"vals":[ {"subst":"tmpdir"}, "/", {"subst":"fastq1_name"} ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{
		"id":"fastq2_name",
		"required":"no",
		"default":"intfile_2.fq.gz",
		"subst_constructor":{
			"vals":[ "intfile_2_", {"subst":"rpt"}, ".fq.gz" ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{
		"id":"fastq2",
		"required":"yes",
		"subst_constructor":{
			"vals":[ {"subst":"tmpdir"}, "/", {"subst":"fastq2_name"} ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{"id":"tophat_dir","required":"no","default":"tophat_out"},
	{
		"id":"tophat_out",
		"required":"no",
		"subst_constructor":{
			"vals":[ {"subst":"tophat_dir"}, "_", {"subst":"rpt"} ],
			"postproc":{"op":"concat","pad":""}
		},
		"default":"tophat_out"
	},
	{"id":"transcriptome_subpath","required":"no"},
	{
		"id":"transcriptome_val",
		"subst_constructor":{
			"vals":[ {"subst":"reposdir"}, "/transcriptomes/", {"subst":"transcriptome_subpath"} ],
			"postproc":{"op":"concat","pad":""}
		}
	},
	{
		"id":"transcriptome_flag",
		"required":"no",
		"subst_constructor":{
			"vals":[ "--transcriptome-index", {"subst":"transcriptome_val"} ],
			"postproc":{"op":"concat","pad":"="}
		}
	},
	{
		"id":"aligner_numthreads_flag",
		"required":"no",
		"subst_constructor":{
			"vals":[ "--num-threads", {"subst":"aligner_numthreads"} ],
			"postproc":{"op":"concat","pad":"="}
		}
	},
	{
		"id":"library_type_flag",
		"required":"no",
		"subst_constructor":{
			"vals":[ "--library-type", {"subst":"library_type"} ],
			"postproc":{"op":"concat","pad":"="}
		}
	},
	{
		"id":"junctions_bed",
		"required":"no",
		"subst_constructor":{
			"vals":[ {"subst":"tophat_dir"}, "_", {"subst":"rpt"}, "/junctions.bed" ],
			"postproc":{"op":"concat","pad":""}
		},
		"default":"tophat_out/junctions.bed"
	},
	{
		"id":"insertions_bed",
		"required":"no",
		"subst_constructor":{
			"vals":[ {"subst":"tophat_dir"}, "_", {"subst":"rpt"}, "/insertions.bed" ],
			"postproc":{"op":"concat","pad":""}
		},
		"default":"tophat_out/insertions.bed"
	},
	{
		"id":"deletions_bed",
		"required":"no",
		"subst_constructor":{
			"vals":[ {"subst":"tophat_dir"}, "_", {"subst":"rpt"}, "/deletions.bed" ],
			"postproc":{"op":"concat","pad":""}
		},
		"default":"tophat_out/deletions.bed"
	},
	{"id":"accepted_hits","required":"no","default":"accepted_hits.bam"},
	{
		"id":"accepted_hits_bam",
		"required":"no",
		"subst_constructor":{
			"vals":[ {"subst":"tophat_dir"}, "_", {"subst":"rpt"}, "/", {"subst":"accepted_hits"} ],
			"postproc":{"op":"concat","pad":""}
		},
		"default":"tophat_out/accepted_hits.bam"
	},
	{"id":"unmapped","required":"no","default":"unmapped.bam"},
	{
		"id":"unmapped_bam",
		"required":"no",
		"subst_constructor":{
			"vals":[ {"subst":"tophat_dir"}, "_", {"subst":"rpt"}, "/", {"subst":"unmapped"} ],
			"postproc":{"op":"concat","pad":""}
		},
		"default":"tophat_out/unmapped.bam"
	},
	{
		"id":"cp_deletions_bed_target",
		"required":"no",
		"subst_constructor":{
			"vals":[ {"subst":"outdatadir"}, "/", {"subst":"rpt"}, ".deletions.bed" ],
			"postproc":{"op":"concat","pad":""}
		}
	},
	{
		"id":"cp_insertions_bed_target",
		"required":"no",
		"subst_constructor":{
			"vals":[ {"subst":"outdatadir"}, "/", {"subst":"rpt"}, ".insertions.bed" ],
			"postproc":{"op":"concat","pad":""}
		}
	},
	{
		"id":"cp_junctions_bed_target",
		"required":"no",
		"subst_constructor":{
			"vals":[ {"subst":"outdatadir"}, "/", {"subst":"rpt"}, ".junctions.bed" ],
			"postproc":{"op":"concat","pad":""}
		}
	},
	{
		"id":"salmon_dir",
		"required":"no",
		"default":"salmon_quant"
	},
	{
		"id":"salmon_out",
		"required":"no",
		"subst_constructor":{
			"vals":[ {"subst":"salmon_dir"}, "_", {"subst":"rpt"} ],
			"postproc":{"op":"concat","pad":""}
		}
	},
	{
		"id":"salmon_quant",
		"required":"no",
		"subst_constructor":{
			"vals":[ {"subst":"salmon_dir"}, "_", {"subst":"rpt"}, "/quant.sf" ],
			"postproc":{"op":"concat","pad":""}
		},
		"default":"salmon_quant/quant.sf"
	},
	{
		"id":"salmon_quant_genes",
		"required":"no",
		"subst_constructor":{
			"vals":[ {"subst":"salmon_dir"}, "_", {"subst":"rpt"}, "/quant.genes.sf" ],
			"postproc":{"op":"concat","pad":""}
		},
		"default":"salmon_quant/quant.genes.sf"
	},
	{
		"id":"salmon_lib_format_counts",
		"required":"no",
		"subst_constructor":{
			"vals":[ {"subst":"salmon_dir"}, "_", {"subst":"rpt"}, "/lib_format_counts.json" ],
			"postproc":{"op":"concat","pad":""}
		},
		"default":"salmon_quant/lib_format_counts.json"
	},
	{
		"id":"salmon_libparams",
		"required":"no",
		"subst_constructor":{
			"vals":[ {"subst":"salmon_dir"}, "_", {"subst":"rpt"}, "/libParams" ],
			"postproc":{"op":"concat","pad":""}
		},
		"default":"salmon_quant/libParams"
	},
	{
		"id":"salmon_cmd_info",
		"required":"no",
		"subst_constructor":{
			"vals":[ {"subst":"salmon_dir"}, "_", {"subst":"rpt"}, "/cmd_info.json" ],
			"postproc":{"op":"concat","pad":""}
		},
		"default":"salmon_quant/cmd_info.json"
	},
	{
		"id":"zip_salmon_quant_target",
		"required":"no",
		"subst_constructor":{
			"vals":[ {"subst":"outdatadir"}, "/", {"subst":"rpt"}, ".salmon_quant.zip" ],
			"postproc":{"op":"concat","pad":""}
		}
	},
	{
		"id":"gene_mapping_flag",
		"required":"no",
		"subst_constructor":{
			"vals":[ "--geneMap=", {"subst":"annotation_val"} ],
			"postproc":{"op":"concat","pad":""}
		}
	},
	{
		"id":"salmon_transcriptome_val",
		"required":"yes"
	}
],
"nodes":[
	{
		"id":"bamtofastq",
		"type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": false,
		"cmd":["bamtofastq", "gz=1", "F=__FQ1_OUT__", "F2=__FQ2_OUT__"]
	},
	{
		"id":"fq1",
		"type":"RAFILE",
		"name":{"subst":"fastq1"}
	},
	{
		"id":"fq2",
		"type":"RAFILE",
		"name":{"subst":"fastq2"}
	},
	{
		"id":"tophat2",
		"type":"EXEC",
		"use_STDIN": false,
		"use_STDOUT": true,
		"cmd": [
				"tophat2",
				"--keep-fasta-order",
				"--no-sort-bam",
				"--output-dir",
				{"subst":"tophat_out"},
				"--mate-inner-dist","100",
				{"subst":"aligner_numthreads_flag"},
				{"subst":"library_type_flag"},
				"--no-coverage-search",
				"--microexon-search",
				{"subst":"transcriptome_flag"} ,
				"__REFERENCE_GENOME_IN__",
				"__FQ1_IN__",
				"__FQ2_IN__"
		]
	},
	{
		"id":"junctions_bed",
		"type":"RAFILE",
		"subtype":"DUMMY",
		"name":{"subst":"junctions_bed"}
	},
	{
		"id":"insertions_bed",
		"type":"RAFILE",
		"subtype":"DUMMY",
		"name":{"subst":"insertions_bed"}
	},
	{
		"id":"deletions_bed",
		"type":"RAFILE",
		"subtype":"DUMMY",
		"name":{"subst":"deletions_bed"}
	},
	{
		"id":"accepted_hits_bam",
		"type":"RAFILE",
		"subtype":"DUMMY",
		"name":{"subst":"accepted_hits_bam"}
	},
	{
		"id":"unmapped_bam",
		"type":"RAFILE",
		"subtype":"DUMMY",
		"name":{"subst":"unmapped_bam"}
	},
	{
		"id":"bamcat",
		"type":"EXEC",
		"use_STDIN":false,
		"use_STDOUT":true,
		"cmd":[ "bamcat", "I=__IN_BAM1__", "I=__IN_BAM2__", "level=0" ]
	},
	{
		"id":"cp_deletions_bed",
		"type":"EXEC",
		"use_STDIN": false,
		"use_STDOUT": false,
		"cmd":[ "cp", "__SRC_DELETIONS_BED_IN__", {"subst":"cp_deletions_bed_target"} ]
	},
	{
		"id":"cp_insertions_bed",
		"type":"EXEC",
		"use_STDIN": false,
		"use_STDOUT": false,
		"cmd":[ "cp", "__SRC_INSERTIONS_BED_IN__", {"subst":"cp_insertions_bed_target"} ]
	},
	{
		"id":"cp_junctions_bed",
		"type":"EXEC",
		"use_STDIN": false,
		"use_STDOUT": false,
		"cmd":[ "cp", "__SRC_JUNCTIONS_BED_IN__", {"subst":"cp_junctions_bed_target"} ]
	},
	{
		"id":"salmon",
		"type":"EXEC",
		"use_STDIN": false,
		"use_STDOUT": true,
		"cmd":[
				"salmon",
				"--no-version-check",
				"quant",
				"--index", {"subst":"salmon_transcriptome_val"},
				"--libType", "A",
				"--mates1", "__FQ1_IN__",
				"--mates2", "__FQ2_IN__",
				{"subst":"gene_mapping_flag"},
				{"subst":"b2c_mt", "ifnull":{"subst_constructor":{ "vals":[ "-p", {"subst":"b2c_mt_val"} ]}}},
				"--output", {"subst":"salmon_out"}
		]
	},
	{
		"id":"zip_salmon_quant",
		"type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": false,
		"cmd":[ 
				"zip", "-r",
				{"subst":"zip_salmon_quant_target"},
				{"subst":"salmon_quant"},
				{"subst":"salmon_quant_genes"},
				{"subst":"salmon_lib_format_counts"},
				{"subst":"salmon_libparams"},
				{"subst":"salmon_cmd_info"}
			  ]
	}
],
"edges":[
	{ "id":"bamtofastq_to_fq1", "from":"bamtofastq:__FQ1_OUT__", "to":"fq1" },
	{ "id":"bamtofastq_to_fq2", "from":"bamtofastq:__FQ2_OUT__", "to":"fq2" },
	{ "id":"fq1_to_tophat2", "from":"fq1", "to":"tophat2:__FQ1_IN__" },
	{ "id":"fq2_to_tophat2", "from":"fq2", "to":"tophat2:__FQ2_IN__" },
	{ "id":"tophat2_to_accepted_hits_bam", "from":"tophat2", "to":"accepted_hits_bam" },
	{ "id":"tophat2_to_unmapped_bam", "from":"tophat2", "to":"unmapped_bam" },
	{ "id":"tophat2_to_deletions_bed", "from":"tophat2", "to":"deletions_bed" },
	{ "id":"cp_deletions_bed", "from":"deletions_bed", "to":"cp_deletions_bed:__SRC_DELETIONS_BED_IN__" },
	{ "id":"tophat2_to_insertions_bed", "from":"tophat2", "to":"insertions_bed" },
	{ "id":"cp_insertions_bed", "from":"insertions_bed", "to":"cp_insertions_bed:__SRC_INSERTIONS_BED_IN__" },
	{ "id":"tophat2_to_junctions_bed", "from":"tophat2", "to":"junctions_bed" },
	{ "id":"cp_junctions_bed", "from":"junctions_bed", "to":"cp_junctions_bed:__SRC_JUNCTIONS_BED_IN__" },
	{ "id":"accepted_hits_bam_to_bamcat", "from":"accepted_hits_bam", "to":"bamcat:__IN_BAM1__" },
	{ "id":"unmapped_bam_to_bamcat", "from":"unmapped_bam", "to":"bamcat:__IN_BAM2__" },
	{ "id":"fq1_to_salmon", "from":"fq1", "to":"salmon:__FQ1_IN__" },
	{ "id":"fq2_to_salmon", "from":"fq2", "to":"salmon:__FQ2_IN__" },
	{ "id":"salmon_to_zip_salmon_quant", "from":"salmon", "to":"zip_salmon_quant"}
]
}
