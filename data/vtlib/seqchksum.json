{
"version":"1.0",
"description":"steps in the alignment pipeline perform a checksum-based comparison of input and output (bam) data. Final validation step in alignment pipeline",
"subgraph_io":{
	"ports":{
		"inputs":{
				"_stdin_":"seqchksum_input",
				"target_bam":"bamcat_output:__TARGETBAM_IN__",
				"phix_bam":"bamcat_output:__PHIXBAM_IN__"
		}
	}
},
"subst_params":[
        {
                "id": "basic_pipeline_params",
                "type":"SPFILE",
		"name":{"subst":"basic_pipeline_params_file"},
                "required": "no",
                "comment":"this will expand to a set of subst_param elements"
        },
	{
		"id":"samtools_merge",
		"required":"yes",
		"subst_constructor":{
			"vals":[
				{"subst":"samtools_executable"},
				"merge",
				"-c",
				"--",
				"-"
			],
			"postproc":{"op":"pack","pad":" "}
		}
	}
],
"nodes":[
        {
                "id":"bamcat_output",
		"comment":"changed from bamcat when deadlock occurred when using new approach of saving chksum files",
                "type":"EXEC",
		"use_STDIN": false,
		"use_STDOUT": true,
		"cmd":[{"subst":"samtools_merge"}, "__TARGETBAM_IN__", "__PHIXBAM_IN__"]
        },
        {
                "id":"seqchksum_input",
                "type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": true,
                "cmd":"bamseqchksum"
        },
        {
                "id":"seqchksum_output",
                "type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": true,
                "cmd":"bamseqchksum"
        },
        {
                "id":"cmp_seqchksum",
                "type":"EXEC",
		"use_STDIN": false,
		"use_STDOUT": false,
                "cmd":"cmp -s __INPUTCHK_IN__ __OUTPUTCHK_IN__",
                "description":"check input primary/sequence data matches output"
        }
],
"edges":[
        {
                "id":"bamcat_to_chk_output",
                "from":"bamcat_output",
                "to":"seqchksum_output"
        },
        {
                "id":"seqchksum_output_to_cmp",
                "from":"seqchksum_output",
                "to":"cmp_seqchksum:__OUTPUTCHK_IN__"
        },
        {
                "id":"seqchksum_input_to_cmp",
                "from":"seqchksum_input",
                "to":"cmp_seqchksum:__INPUTCHK_IN__"
        }
]
}
