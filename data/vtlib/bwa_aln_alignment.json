{
"version":"1.0",
"description":"run bwa mem to to align input bam to supplied reference genome",
"subgraph_io":{
	"ports":{
		"inputs":{
			"_stdin_":"bwa_aln_start_bam",
			"reference":["bwa_aln_1:__REFERENCE_GENOME_FASTA__", "bwa_aln_2:__REFERENCE_GENOME_FASTA__", "bwa_sampe:__REFERENCE_GENOME_FASTA__"]
		},
		"outputs":{
			"_stdout_":"samtobam"
		}
	}
},
"subst_params":[
        {
                "id": "basic_pipeline_params",
                "type":"SPFILE",
		"name":{"subst":"basic_pipeline_params_file"},
                "required": "no",
                "comment":"this will expand to a set of subst_param elements"
        },
	{
		"name":"bwa_aln_start_bam_name",
		"required":"no",
		"default":"bwa_aln_start.bam",
		"subst_constructor":{
			"vals":[
				"bwa_aln_start_",
				{"subst":"rpt"},
				".bam"
			],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{
		"name":"bwa_aln_start_bam",
		"required":"yes",
		"subst_constructor":{
			"vals":[
				{"subst":"tmpdir"},
				"/",
				{"subst":"bwa_aln_start_bam_name"}
			],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{
		"name":"bwa_aln_1_cmd",
		"required":"yes",
		"subst_constructor":{
			"vals":[
				{"subst":"bwa_executable"},
				"aln",
				"-t",
				{"subst":"aligner_numthreads"},
				"-b1",
				"__REFERENCE_GENOME_FASTA__",
				"__BAM_IN__"
			],
			"postproc":{"op":"noconcat","pad":" "}
		}
	},
	{
		"name":"bwa_aln_2_cmd",
		"required":"yes",
		"subst_constructor":{
			"vals":[
				{"subst":"bwa_executable"},
				"aln",
				"-t",
				{"subst":"aligner_numthreads"},
				"-b2",
				"__REFERENCE_GENOME_FASTA__",
				"__BAM_IN__"
			],
			"postproc":{"op":"noconcat","pad":" "}
		}
	},
	{
		"name":"bwa_sampe_cmd",
		"required":"yes",
		"subst_constructor":{
			"vals":[
				{"subst":"bwa_executable"},
				"sampe",
				"__REFERENCE_GENOME_FASTA__",
				"__SAI_1__",
				"__SAI_2__",
				"__BAM_1__",
				"__BAM_2__"
			],
			"postproc":{"op":"noconcat","pad":" "}
		}
	}
],
"nodes":[
	{
             "id":"bwa_aln_start_bam",
             "type":"RAFILE",
             "name":{"subst":"bwa_aln_start_bam"}
        },
	{
		"id":"bwa_aln_1",
		"type":"EXEC",
		"cmd":{"subst":"bwa_aln_1_cmd"}
	},
	{
		"id":"bwa_aln_2",
		"type":"EXEC",
		"cmd":{"subst":"bwa_aln_2_cmd"}
	},
        {
                "id":"bwa_sampe",
                "type":"EXEC",
		"cmd":{"subst":"bwa_sampe_cmd"}
        },
        {
                "id":"samtobam",
                "type":"EXEC",
                "cmd":"scramble -I sam -O bam"
        }
],
"edges":[
	{
		"id":"bwa_aln_bam1",
		"from":"bwa_aln_start_bam",
		"to":"bwa_aln_1:__BAM_IN__"
	},
	{
		"id":"bwa_aln_bam2",
		"from":"bwa_aln_start_bam",
		"to":"bwa_aln_2:__BAM_IN__"
	},
	{
		"id":"bwa_sampe_bam1",
		"from":"bwa_aln_start_bam",
		"to":"bwa_sampe:__BAM_1__"
	},
	{
		"id":"bwa_sampe_bam2",
		"from":"bwa_aln_start_bam",
		"to":"bwa_sampe:__BAM_2__"
	},
	{
		"id":"aln1_sai_to_sampe",
		"from":"bwa_aln_1",
		"to":"bwa_sampe:__SAI_1__"
	},
	{
		"id":"aln2_sai_to_sampe",
		"from":"bwa_aln_2",
		"to":"bwa_sampe:__SAI_2__"
	},
	{
		"id":"bwa_sampe_to_scramble",
		"from":"bwa_sampe",
		"to":"samtobam"
	}
]
}
