{
"description":"Process RNASeq data in BAM files within NPG Pipeline producing WTSI DNAP Sequencing Informatics BAM output: full PG history, complete SQ lines, adapter marking, recoding indexing sequence etc",
"nodes":[
	{
		"id":"src_bam",
		"type":"INFILE",
		"name":{"subst_param_name":"src_bam",
			"required":"yes",
			"subst_constructor":{
				"vals":[
					{"subst_param_name":"indatadir","required":"no","default":"."},
					"/",
					{"subst_param_name":"rpt","required":"yes"},
					".bam"
				],
				"postproc":{"op":"concat", "pad":""}
			}
		},
		"description":"BAM using as input to this pipeline - expected to already contain PhiX (normally from hyb buffer spike-in) alignments"
	},
	{
		"id":"bamcollate2",
		"type":"EXEC",
		"cmd":["bamcollate2", "collate=1", "level=0"],
		"comment":"ensure BAM records are gathered by template i.e. queryname"
	},
	{
		"id":"tee_input",
		"type":"EXEC",
		"cmd":"tee __FIFO__"
	},
	{
		"id":"bamrecompress_input",
		"type":"EXEC",
		"cmd":"bamrecompress verbose=0 numthreads=2"
	},
	{
		"id":"int_adp_bam",
		"type":"RAFILE",
		"name":{"subst_param_name":"int_clipped_adapters_bam",
			"required":"yes",
			"subst_constructor":{
				"vals":[
					{"subst_param_name":"tmpdir","required":"no","default":"."},
					"/",
					{"subst_param_name":"int_clipped_adapters_bam_name",
						"required":"no",
						"default":"int_adp.bam",
						"subst_constructor":{
							"vals":[
								"int_adp_",
								{"subst_param_name":"rpt","required":"yes"},
								".bam"
							],
							"postproc":{"op":"concat", "pad":""}
						}
					}
				],
				"postproc":{"op":"concat", "pad":""}
			}
		}
	},
	{
		"id":"bamcollate2_ranking",
		"type":"EXEC",
		"cmd":"bamcollate2 collate=3 level=0",
		"comment":"already collated suitably - just here to do the ranking in the name"
	},
	{
		"id":"bamreset_tophat",
		"type":"EXEC",
		"cmd":"bamreset resetaux=0 level=0 verbose=0",
		"comment":"Alignment removal also required for bamadapterclip (at least 0.0.142)"
	},
	{
		"id":"bamadapterclip",
		"type":"EXEC",
		"cmd":"bamadapterclip verbose=0 level=0",
		"description":"Hard clip adapter sequence from reads before feeding to Tophat2"
	},
	{
		"id":"alignment",
		"type":"VTFILE",
		"name":"tophat2_alignment_vtf.json"
	},
	{
		"id":"headerSQfix",
		"type":"VTFILE",
		"name":"headerSQfix_vtf.json"
	},
	{
		"id":"bam12split_tophat",
		"type":"EXEC",
		"cmd":"bam12split verbose=0 level=0"
	},
	{
		"id":"bamsort_qname",
		"type":"EXEC",
		"cmd":"bamsort SO=queryname level=0"
	},
	{
		"id":"bamreset_prealn",
		"type":"EXEC",
		"cmd":"bamreset resetaux=0 level=0 verbose=0",
		"comment":"bam12auxmerge <= 0.0.142 requires SQ headers removed. Alignment removal also required for bamadapterclip (at least 0.0.142)"
	},
	{
		"id":"bamadapterclip_prealn",
		"type":"EXEC",
		"cmd":"bamadapterclip verbose=0 level=0"
	},
	{
		"id":"bam12auxmerge",
		"type":"EXEC",
		"cmd":"bam12auxmerge level=0 rankstrip=1 ranksplit=0 zztoname=0 clipreinsert=1 __PREALN_BAM__"
	},
#####################################
# alignment filter and metrics output
#####################################
	{
		"id":"alignment_filter",
		"type":"EXEC",
		"cmd":{"subst_param_name":"alignment_filter",
			"required":"yes",
			"subst_constructor":{
			"vals":[
					{"subst_param_name":"java_cmd","required":"no","default":"/software/jdk1.7.0_25/bin/java"},
					"-Xmx1000m",
					"-jar", {"subst_param_name":"alignment_filter_jar","required":"no","default":"/nfs/users/nfs_d/dj3/repos/illumina2bam/dist/AlignmentFilter.jar"},
					"IN=__PHIX_INBAM__",
					"IN=__TARGET_INBAM__",
					"OUT=__PHIX_OUTBAM__",
					"OUT=/dev/stdout",
					"METRICS_FILE=__AF_METRICS__",
					"VALIDATION_STRINGENCY=SILENT",
					"CREATE_MD5_FILE=false",
					"VERBOSITY=INFO",
					"QUIET=false",
					"COMPRESSION_LEVEL=5",
					"MAX_RECORDS_IN_RAM=500000",
					"CREATE_INDEX=false"
				],
				"postproc":{"op":"noconcat", "pad":" "}
			}
		}
	},
	{
		"id":"af_metrics",
		"type":"OUTFILE",
		"name":{"subst_param_name":"af_metrics",
			"required":"yes",
			"subst_constructor":{
				"vals":[
					{"subst_param_name":"logdir","required":"no","default":"."},
					"/",
					{"subst_param_name":"rpt","required":"yes"},
					"_",
					{"subst_param_name":"af_metrics_name","required":"no","default":"af_metrics.log"}
				],
				"postproc":{"op":"concat", "pad":""}
			}
		}
	},
#######################
# phiX final processing
#######################
	{
		"id":"post_proc_phix",
		"type":"VTFILE",
		"name":"post_proc_vtf.json"
	},
	{
		"id":"phix_bam",
		"type":"OUTFILE",
		"name":{"subst_param_name":"phix_bam",
			"required":"yes",
			"subst_constructor":{
				"vals":[
					{"subst_param_name":"outdatadir","required":"no","default":"."},
					"/",
					{"subst_param_name":"rpt","required":"yes"},
					"_",
					{"subst_param_name":"phix_bam_name","required":"no","default":"phix.bam"}
				],
				"postproc":{"op":"concat", "pad":""}
			}
		}
	},
#############################
# target BAM final processing
#############################
	{
		"id":"post_proc",
		"type":"VTFILE",
		"name":"post_proc_vtf.json"
	},
	{
		"id":"target_bam",
		"type":"OUTFILE",
		"name":{"subst_param_name":"target_bam",
			"required":"yes",
			"subst_constructor":{
				"vals":[
					{"subst_param_name":"outdatadir","required":"no","default":"."},
					"/",
					{"subst_param_name":"rpt","required":"yes"},
					"_",
					{"subst_param_name":"bam_name","required":"no","default":"aln.bam"}
				],
				"postproc":{"op":"concat", "pad":""}
			}
		}
	},
##################################################
# check input primary/sequence data matches output
##################################################
	{
		"id":"bamcat_output",
		"type":"EXEC",
		"cmd":"bamcat verbose=0 level=0 __PHIXBAM__ __TARGETBAM__"
	},
	{
		"id":"seqchksum_output",
		"type":"EXEC",
		"cmd":"bamseqchksum"
	},
	{
		"id":"seqchksum_input",
		"type":"EXEC",
		"cmd":"bamseqchksum"
	},
	{
		"id":"cmp_seqchksum",
		"type":"EXEC",
		"cmd":"cmp -s __INPUTCHK__ __OUTPUTCHK__",
		"description":"check input primary/sequence data matches output"
	}
],
"edges":[
	{
		"id":"src_to_bc2",
		"from":"src_bam",
		"to":"bamcollate2"
	},
	{
		"id":"bc2_to_ti",
		"from":"bamcollate2",
		"to":"tee_input"
	},
	{
		"id":"ti_to_brc",
		"from":"tee_input",
		"to":"bamrecompress_input"
	},
	{
		"id":"brc_to_int_adp_bam",
		"from":"bamrecompress_input",
		"to":"int_adp_bam"
	},
############################################################
# tophat alignment
############################################################
	{
		"id":"ti_to_bamcollate2_ranking",
		"from":"tee_input:__FIFO__",
		"to":"bamcollate2_ranking"
	},
	{
		"id":"bamcollate2_ranking_to_bamreset_tophat",
		"from":"bamcollate2_ranking",
		"to":"bamreset_tophat"
	},
	{
		"id":"bamreset_tophat_to_bamtofastq",
		"from":"bamreset_tophat",
		"to":"bamadapterclip"
	},
	{
		"id":"bamadapterclip_to_bamtofastq",
		"from":"bamadapterclip",
		"to":"alignment"
	},
#	{
#		"id":"tee_headerSQfix_to_sam",
##		"from":"tee_headerSQfix:__OUT1__",
#		"from":"alignment",
#		"to":"tee_headerSQfix"
#	},

	{
		"id":"tee_headerSQfix_to_sam",
		"from":"alignment",
		"to":"headerSQfix"
	},
	{
		"id":"headerSQfix_to_bam12split_tophat",
		"from":"headerSQfix",
		"to":"bam12split_tophat"
	},
	{
		"id":"bam12split_tophat_to_bamsort_qname",
		"from":"bam12split_tophat",
		"to":"bamsort_qname"
	},
	{
		"id":"bam_to_bamreset_prealn",
		"from":"int_adp_bam",
		"to":"bamreset_prealn"
	},
	{
		"id":"bamreset_prealn_to_bamadapterclip_prealn",
		"from":"bamreset_prealn",
		"to":"bamadapterclip_prealn"
	},
	{
		"id":"bamadapterclip_prealn_to_bam12auxmerge",
		"from":"bamadapterclip_prealn",
		"to":"bam12auxmerge:__PREALN_BAM__"
	},
	{
		"id":"bsqn_to_bam12auxmerge",
		"from":"bamsort_qname",
		"to":"bam12auxmerge"
	},
	{
		"id":"bam12auxmerge_to_alignment_filter",
		"from":"bam12auxmerge",
#################
# AlignmentFilter
#################
		"to":"alignment_filter:__TARGET_INBAM__"
	},
	{
		"id":"iab_to_alignment_filter",
		"from":"int_adp_bam",
		"to":"alignment_filter:__PHIX_INBAM__"
	},
	{
		"id":"alignment_filter_to_metrics",
		"from":"alignment_filter:__AF_METRICS__",
		"to":"af_metrics"
	},
#####################
# phiX BAM production
#####################
	{
		"id":"alignmentfilter_to_bamsort_coord_target",
		"from":"alignment_filter",
		"to":"post_proc_phix"
	},
	{
		"id":"final_stretch",
		"from":"post_proc_phix",
		"to":"phix_bam"
	},
#######################
# Target BAM production
#######################
	{
		"id":"alignmentfilter_to_bamsort_coord_target",
		"from":"alignment_filter",
		"to":"post_proc"
	},
	{
		"id":"final_stretch",
		"from":"post_proc",
		"to":"target_bam"
	},
##################################################
# check input primary/sequence data matches output
##################################################
	{
		"id":"phix_bam_to_bamcat",
		"from":"phix_bam",
		"to":"bamcat_output:__PHIXBAM__"
	},
	{
		"id":"target_bam_to_bamcat",
		"from":"target_bam",
		"to":"bamcat_output:__TARGETBAM__"
	},
	{
		"id":"bamcat_to_chk_output",
		"from":"bamcat_output",
		"to":"seqchksum_output"
	},
	{
		"id":"src_bam_to_chk_input",
		"from":"src_bam",
		"to":"seqchksum_input"
	},
	{
		"id":"seqchksum_output_to_cmp",
		"from":"seqchksum_output",
		"to":"cmp_seqchksum:__OUTPUTCHK__"
	},
	{
		"id":"seqchksum_input_to_cmp",
		"from":"seqchksum_input",
		"to":"cmp_seqchksum:__INPUTCHK__"
	}
]
}
